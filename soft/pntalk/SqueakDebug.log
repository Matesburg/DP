MessageNotUnderstood: PNCompiledClass>>create15 May 2013 11:36:20 amVM: Win32 - a SmalltalkImageImage: Squeak3.9 [latest update: #7067]SecurityManager state:Restricted: falseFileAccess: trueSocketAccess: trueWorking Dir E:\VUT\DP\soft\pntalkTrusted Dir E:\VUT\DP\soft\pntalk\MatronUntrusted Dir C:\Users\Matron\Documents\My SqueakPNCompiledClass(Object)>>doesNotUnderstand: #create	Receiver: a PNCompiledClass	Arguments and temporary variables: 		aMessage: 	create	Receiver's instance variables: 		name: 	'fff'		parent: 	ConferenceSystemDP		superClassName: 	'PN'		nameSpace: 	nil		netsList: 	a Dictionary()		portsList: 	a Dictionary()		objectNet: 	a PNCompiledObjectNet		classWindow: 	nil[] in MenuItemMorph>>invokeWithEvent: {[(selArgCount := selector numArgs) = 0   ifTrue: [target perform: selector] ...]}	Arguments and temporary variables: 		evt: 	[156@648 mouseUp 46862450]		selArgCount: 	0		w: 	a PasteUpMorph(1622) [world]BlockContext>>ensure:	Receiver: [] in MenuItemMorph>>invokeWithEvent: {[(selArgCount := selector numArgs) = 0   ifTrue: [t...etc...	Arguments and temporary variables: 		aBlock: 	[] in CursorWithMask(Cursor)>>showWhile: {[oldcursor show]}		returnValue: 	nil		b: 	nil	Receiver's instance variables: 		sender: 	BlockContext>>ensure:		pc: 	142		stackp: 	0		nargs: 	0		startpc: 	132		home: 	MenuItemMorph>>invokeWithEvent:CursorWithMask(Cursor)>>showWhile:	Receiver: ((CursorWithMask	extent: 16@16	depth: 1	fromArray: #(		2r0		2r10000000000000000000000...etc...	Arguments and temporary variables: 		aBlock: 	[] in MenuItemMorph>>invokeWithEvent: {[(selArgCount := selector numArg...etc...		oldcursor: 	((CursorWithMask	extent: 16@16	depth: 1	fromArray: #(		2r0		2r1...etc...	Receiver's instance variables: 		bits: 	a Bitmap of length 16		width: 	16		height: 	16		depth: 	1		offset: 	-1@-1		maskForm: 	Form(16x16x1)--- The full stack ---PNCompiledClass(Object)>>doesNotUnderstand: #create[] in MenuItemMorph>>invokeWithEvent: {[(selArgCount := selector numArgs) = 0   ifTrue: [target perform: selector] ...]}BlockContext>>ensure:CursorWithMask(Cursor)>>showWhile: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -MenuItemMorph>>invokeWithEvent:MenuItemMorph>>mouseUp:MenuItemMorph>>handleMouseUp:MouseButtonEvent>>sentTo:MenuItemMorph(Morph)>>handleEvent:MorphicEventDispatcher>>dispatchDefault:with:MorphicEventDispatcher>>dispatchEvent:with:MenuItemMorph(Morph)>>processEvent:using:MorphicEventDispatcher>>dispatchDefault:with:MorphicEventDispatcher>>dispatchEvent:with:MenuMorph(Morph)>>processEvent:using:MenuMorph(Morph)>>processEvent:MenuMorph>>handleFocusEvent:[] in HandMorph>>sendFocusEvent:to:clear: {[ActiveHand := self.  ActiveEvent := anEvent.  result := focusHolder     han...]}[] in PasteUpMorph>>becomeActiveDuring: {[aBlock value]}BlockContext>>on:do:PasteUpMorph>>becomeActiveDuring:HandMorph>>sendFocusEvent:to:clear:HandMorph>>sendEvent:focus:clear:HandMorph>>sendMouseEvent:HandMorph>>handleEvent:HandMorph>>processEvents[] in WorldState>>doOneCycleNowFor: {[:h |  ActiveHand := h.  h processEvents.  capturingGesture := capturingGest...]}Array(SequenceableCollection)>>do:WorldState>>handsDo:WorldState>>doOneCycleNowFor:WorldState>>doOneCycleFor:PasteUpMorph>>doOneCycle[] in Project class>>spawnNewProcess {[[World doOneCycle.  Processor yield.  false] whileFalse.  nil]}[] in BlockContext>>newProcess {[self value.  Processor terminateActive]}