MessageNotUnderstood: PNParser>>parsingError8 May 2013 8:08:30 pmVM: Win32 - a SmalltalkImageImage: Squeak3.9 [latest update: #7067]SecurityManager state:Restricted: falseFileAccess: trueSocketAccess: trueWorking Dir E:\VUT\DP\soft\pntalkTrusted Dir E:\VUT\DP\soft\pntalk\MatronUntrusted Dir C:\Users\Matron\Documents\My SqueakPNParser(Object)>>doesNotUnderstand: #parsingError	Receiver: a PNParser	Arguments and temporary variables: 		aMessage: 	parsingError	Receiver's instance variables: 		source: 	a ReadStream a Text for 'class SystemNet is_a PNobject	place confere...etc...		mark: 	379		hereChar: 	$(		aheadChar: 	$1		token: 	'loggedUserNet'		tokenType: 	#word		currentComment: 	nil		buffer: 	a WriteStream 'loggedUserNet'		typeTable: 	#(#xBinary #xBinary #xBinary #xBinary #xBinary #xBinary #xBinary #xB...etc...		here: 	'postcond'		hereType: 	#word		hereMark: 	370		hereEnd: 	377		prevMark: 	368		prevEnd: 	368		encoder: 	nil		requestor: 	nil		parseNode: 	nil		failBlock: 	nil		requestorOffset: 	0		tempsMark: 	337		doitFlag: 	false		properties: 	a MethodProperties		category: 	nil		actionsCollection: 	an OrderedCollection()		lexer: 	a Lex		alex: 	a LexerTPNParser>>expected:value:	Receiver: a PNParser	Arguments and temporary variables: 		t: 	#id		v: 	#inhibitor	Receiver's instance variables: 		source: 	a ReadStream a Text for 'class SystemNet is_a PNobject	place confere...etc...		mark: 	379		hereChar: 	$(		aheadChar: 	$1		token: 	'loggedUserNet'		tokenType: 	#word		currentComment: 	nil		buffer: 	a WriteStream 'loggedUserNet'		typeTable: 	#(#xBinary #xBinary #xBinary #xBinary #xBinary #xBinary #xBinary #xB...etc...		here: 	'postcond'		hereType: 	#word		hereMark: 	370		hereEnd: 	377		prevMark: 	368		prevEnd: 	368		encoder: 	nil		requestor: 	nil		parseNode: 	nil		failBlock: 	nil		requestorOffset: 	0		tempsMark: 	337		doitFlag: 	false		properties: 	a MethodProperties		category: 	nil		actionsCollection: 	an OrderedCollection()		lexer: 	a Lex		alex: 	a LexerTPNParser>>expectedType:	Receiver: a PNParser	Arguments and temporary variables: 		t: 	#id	Receiver's instance variables: 		source: 	a ReadStream a Text for 'class SystemNet is_a PNobject	place confere...etc...		mark: 	379		hereChar: 	$(		aheadChar: 	$1		token: 	'loggedUserNet'		tokenType: 	#word		currentComment: 	nil		buffer: 	a WriteStream 'loggedUserNet'		typeTable: 	#(#xBinary #xBinary #xBinary #xBinary #xBinary #xBinary #xBinary #xB...etc...		here: 	'postcond'		hereType: 	#word		hereMark: 	370		hereEnd: 	377		prevMark: 	368		prevEnd: 	368		encoder: 	nil		requestor: 	nil		parseNode: 	nil		failBlock: 	nil		requestorOffset: 	0		tempsMark: 	337		doitFlag: 	false		properties: 	a MethodProperties		category: 	nil		actionsCollection: 	an OrderedCollection()		lexer: 	a Lex		alex: 	a LexerTPNParser>>id	Receiver: a PNParser	Arguments and temporary variables: 		p: 	#inhibitor	Receiver's instance variables: 		source: 	a ReadStream a Text for 'class SystemNet is_a PNobject	place confere...etc...		mark: 	379		hereChar: 	$(		aheadChar: 	$1		token: 	'loggedUserNet'		tokenType: 	#word		currentComment: 	nil		buffer: 	a WriteStream 'loggedUserNet'		typeTable: 	#(#xBinary #xBinary #xBinary #xBinary #xBinary #xBinary #xBinary #xB...etc...		here: 	'postcond'		hereType: 	#word		hereMark: 	370		hereEnd: 	377		prevMark: 	368		prevEnd: 	368		encoder: 	nil		requestor: 	nil		parseNode: 	nil		failBlock: 	nil		requestorOffset: 	0		tempsMark: 	337		doitFlag: 	false		properties: 	a MethodProperties		category: 	nil		actionsCollection: 	an OrderedCollection()		lexer: 	a Lex		alex: 	a LexerT--- The full stack ---PNParser(Object)>>doesNotUnderstand: #parsingErrorPNParser>>expected:value:PNParser>>expectedType:PNParser>>id - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -PNParser>>idArcexpr[] in PNParser>>optbas: {[self idArcexpr]}PNParser>>listofplus:PNParser>>optbas:PNParser>>netIn[] in PNParser>>component {[self netIn]}PNParser>>listof:PNParser>>componentPNParser>>parseNet[] in PNParser>>parseNets {[self parseNet]}PNParser>>listof:PNParser>>parseNetsPNParser>>parseClassPNParser>>compileElementPNParser>>compile:PNCompiledClass>>compile:PluggableTextMorph>>acceptTextInModel...etc...