WAComponent subclass: #Author	instanceVariableNames: 'net'	classVariableNames: ''	poolDictionaries: ''	category: 'PNtalk-DP-xcaham02'!!Author methodsFor: 'as yet unclassified' stamp: 'rk 5/5/2013 03:07'!renderContentOn: html	html anchor callback: [ "Transcript show: 'Logout'; cr." self answer: net ]; with: 'Logout'.	html heading: 'Author controler'.! !!Author methodsFor: 'as yet unclassified' stamp: 'rk 5/5/2013 02:21'!with: uNet	net _ uNet.! !WAComponent subclass: #ConferenceList	instanceVariableNames: 'system user role confState'	classVariableNames: ''	poolDictionaries: ''	category: 'PNtalk-DP-xcaham02'!!ConferenceList methodsFor: 'as yet unclassified' stamp: 'rk 5/14/2013 01:41'!addConf	| conf res |	conf _ nil.	conf _ system newConference.	res _ ( self call: (EditConference new entity: conf ) ).	res ifTrue: [			system addConference: conf.			Transcript show: 'Added new conference'	; cr.		]		ifFalse: [			Transcript show: 'Added conf cancelled.'; cr.			"system removeConf: conf."		].! !!ConferenceList methodsFor: 'as yet unclassified' stamp: 'rk 5/18/2013 06:27'!for: aUser system: aVar	user _ aUser.	role _ ( user asPort memberRole: (PNVariable name: #role) ) variable: #role.	system _ aVar.! !!ConferenceList methodsFor: 'as yet unclassified' stamp: 'rk 5/18/2013 10:57'!renderActionsOn: html with: conf	(user asPort isAdmin) isTrue	ifTrue: [		html tableData: [			html anchor callback: [				self call: (EditConference new entity: conf ).			]; with: 'Edit'.		].		html tableData: [			html anchor callback: [				(self confirm: 'Are you sure that you want to remove this conference?')					ifTrue: [ system removeConf: conf ].			]; with: 'Delete'.		].	].! !!ConferenceList methodsFor: 'as yet unclassified' stamp: 'rk 5/18/2013 11:05'!renderContentOn: html	| conferences |	html heading: 'Conferences' level: 2.	(user asPort isAdmin) isTrue		ifTrue: [			html anchor callback: [self addConf.]; with: 'Add'.			].			conferences _ user asPort conferences: (PNVariable name: #c).	conferences isTrue		ifTrue: [			html table: [				html tableRow: [					self renderTableHeadingsOn: html.					].			(conferences collectVariable: #c) do:				[:conf |					html tableRow: [						self renderNameOn: html with: conf.						self renderStateOn: html with: conf.            				self renderActionsOn: html with: conf.					].				].			].		].! !!ConferenceList methodsFor: 'as yet unclassified' stamp: 'rk 5/18/2013 11:02'!renderNameOn: html with: conf	| name res |	res _ conf asPort name: (PNVariable name: #var).	name _ res variable: #var.		html tableData: [			html anchor callback: [				self call: (DetailConference new entity: conf ).			]; with: name.	].! !!ConferenceList methodsFor: 'as yet unclassified' stamp: 'rk 5/18/2013 11:05'!renderStateOn: html with: conf	| res state |	res _ conf asPort state: (PNVariable name: #var).	state _ res variable: #var.		html tableData: [			html text: state.	].! !!ConferenceList methodsFor: 'as yet unclassified' stamp: 'rk 5/18/2013 11:05'!renderTableHeadingsOn: html		html tableHeading: 'Name'.						html tableHeading: 'State'.						(user asPort isAdmin) isTrue						ifTrue: [							html tableHeading colSpan: 2; with: 'Actions'.						].! !!ConferenceList methodsFor: 'as yet unclassified' stamp: 'rk 5/14/2013 00:53'!system: aVar	system _ aVar.! !WAComponent subclass: #DetailConference	instanceVariableNames: 'entity eName eDesc eDatetime eLocation eState'	classVariableNames: ''	poolDictionaries: ''	category: 'PNtalk-DP-xcaham02'!!DetailConference methodsFor: 'as yet unclassified' stamp: 'rk 5/18/2013 10:18'!entity: aVar	entity _ aVar.	eName _ (entity asPort name: (PNVariable name: #var) ) variable: #var.	eDesc _ (entity asPort description: (PNVariable name: #var) ) variable: #var.	eDatetime _ (entity asPort datetime: (PNVariable name: #var) ) variable: #var.	eLocation _ (entity asPort location: (PNVariable name: #var) ) variable: #var.	eState _ (entity asPort state: (PNVariable name: #var) ) variable: #var.! !!DetailConference methodsFor: 'as yet unclassified' stamp: 'rk 5/18/2013 10:23'!renderContentOn: html	html anchor callback: [ self answer ]; with: 'Back'.	html heading: 'Conference detail' level: 2.	self renderDetailOn: html.	self renderPapersOn: html.	self renderMembersOn: html.! !!DetailConference methodsFor: 'as yet unclassified' stamp: 'rk 5/18/2013 10:21'!renderDetailOn: html	html table: [		html tableRow: [			html tableHeading: [ html text: 'Name'. ].			html tableData: [ html text: eName. ].		].		html tableRow: [			html tableHeading: [ html text: 'Description'. ].			html tableData: [ html text: eDesc ].		].		html tableRow: [			html tableHeading: [ html text: 'When'. ].			html tableData: [ html text: eDatetime. ].		].		html tableRow: [			html tableHeading: [ html text: 'Where'. ].			html tableData: [ html text: eLocation. ].		].		html tableRow: [			html tableHeading: [ html text: 'State'. ].			html tableData: [ html text: eState. ].		].	].	! !!DetailConference methodsFor: 'as yet unclassified' stamp: 'rk 5/18/2013 10:43'!renderMembersOn: html	html heading: 'Members' level: 3.	! !!DetailConference methodsFor: 'as yet unclassified' stamp: 'rk 5/18/2013 10:43'!renderPapersOn: html	html heading: 'Papers' level: 3.	! !WAComponent subclass: #EditConference	instanceVariableNames: 'name entity datetime desc state'	classVariableNames: ''	poolDictionaries: ''	category: 'PNtalk-DP-xcaham02'!!EditConference methodsFor: 'as yet unclassified' stamp: 'rk 5/13/2013 22:38'!datetime	| res |	res _ entity asPort datetime: (PNVariable name: #var).	^ res variable: #var.! !!EditConference methodsFor: 'as yet unclassified' stamp: 'rk 5/13/2013 22:42'!datetime: aVar	datetime _ aVar.	entity setDatetime: aVar.! !!EditConference methodsFor: 'as yet unclassified' stamp: 'rk 5/13/2013 22:43'!desc	| res |	res _ entity asPort description: (PNVariable name:#var).	^ res variable: #var.! !!EditConference methodsFor: 'as yet unclassified' stamp: 'rk 5/13/2013 22:43'!desc: aVar	desc _ aVar.	entity setDescription: aVar.! !!EditConference methodsFor: 'as yet unclassified' stamp: 'rk 5/13/2013 22:38'!entity: e	entity _ e.! !!EditConference methodsFor: 'as yet unclassified' stamp: 'rk 5/13/2013 23:03'!name	| res |	res _ entity getName.	res = #nil		ifTrue: [			^ ''.		]		ifFalse: [			Transcript show: 'tuuu'; cr.			^ res.		].! !!EditConference methodsFor: 'as yet unclassified' stamp: 'rk 5/13/2013 22:40'!name: aVar	name _ aVar.	entity setName: aVar.! !!EditConference methodsFor: 'as yet unclassified' stamp: 'rk 5/14/2013 02:41'!renderContentOn: html	html heading: 'Edit conference' level: 2.		html form: [		html table: [			html tableRow: [				html tableHeading: 'Name' .            		html tableData: [					html textInput on: #name of: self .				].			].			html tableRow: [				html tableHeading: 'Description' .            		html tableData: [					html textInput on: #desc of: self .				].			].			html tableRow: [				html tableHeading: 'Date and time' .            		html tableData: [					html textInput on: #datetime of: self .				].			].			html tableRow: [				html tableHeading: 'State' .            		html tableData: [					html select						list: #(#created #open #closed #finished);						on: #state of: self .				].			].		].       	html submitButton callback: [ self answer: true ]; with: 'Ok'.		html cancelButton callback: [ self answer: false ]; with: 'Cancel'.	]. ! !!EditConference methodsFor: 'as yet unclassified' stamp: 'rk 5/14/2013 02:42'!state	| res |	res _ entity asPort state: (PNVariable name:#var).	^ res variable: #var.! !!EditConference methodsFor: 'as yet unclassified' stamp: 'rk 5/14/2013 02:41'!state: aVar	state _ aVar.	entity setState: aVar.! !WAComponent subclass: #EditMember	instanceVariableNames: 'name email entity role'	classVariableNames: ''	poolDictionaries: ''	category: 'PNtalk-DP-xcaham02'!!EditMember methodsFor: 'as yet unclassified' stamp: 'rk 5/13/2013 22:35'!email	| res |	res _ entity asPort email: (PNVariable name:#var).	^ res variable: #var.! !!EditMember methodsFor: 'as yet unclassified' stamp: 'rk 5/13/2013 22:31'!email: aEmail	email _ aEmail.	entity setEmail: aEmail.! !!EditMember methodsFor: 'as yet unclassified' stamp: 'rk 5/13/2013 22:31'!entity: aEntity	entity _ aEntity.! !!EditMember methodsFor: 'as yet unclassified' stamp: 'rk 5/13/2013 22:35'!name	| res |	res _  entity asPort name: (PNVariable name: #var).	^ res variable: #var.! !!EditMember methodsFor: 'as yet unclassified' stamp: 'rk 5/13/2013 22:34'!name: aName	name _ aName.	entity setName: aName.! !!EditMember methodsFor: 'as yet unclassified' stamp: 'rk 5/13/2013 22:32'!renderContentOn: html	html heading: 'Edit User'.		html form: [		html table: [			html tableRow: [				html tableHeading: 'Name' .            		html tableData: [					html textInput on: #name of: self .				].			].			html tableRow: [				html tableHeading: 'Role' .            		html tableData: [					html select						list: #(#author #reviewer #admin);						on: #role of: self .				].			].			html tableRow: [				html tableHeading: 'Email' .            		html tableData: [					html textInput on: #email of: self .				].			].		].       	html submitButton callback: [ self answer: true ]; with: 'Ok'.		html cancelButton callback: [ self answer: false ]; with: 'Cancel'.	]. ! !!EditMember methodsFor: 'as yet unclassified' stamp: 'rk 5/13/2013 22:36'!role	| res |	res _  entity asPort role: (PNVariable name: #var).	^ res variable: #var.! !!EditMember methodsFor: 'as yet unclassified' stamp: 'rk 5/13/2013 22:37'!role: aVar	role _ aVar.	entity setRole: aVar.! !WAComponent subclass: #Reviewer	instanceVariableNames: 'net'	classVariableNames: ''	poolDictionaries: ''	category: 'PNtalk-DP-xcaham02'!!Reviewer methodsFor: 'as yet unclassified' stamp: 'rk 5/5/2013 03:14'!renderContentOn: html	html anchor callback: [ "Transcript show: 'Logout'; cr." self answer: net ]; with: 'Logout'.	html heading: 'Reviewer controler'.! !!Reviewer methodsFor: 'as yet unclassified' stamp: 'rk 5/5/2013 03:15'!with: uNet	net _ uNet.! !WAComponent subclass: #SayHello	instanceVariableNames: 'name'	classVariableNames: ''	poolDictionaries: ''	category: 'PNtalk-DP-xcaham02'!!SayHello methodsFor: 'as yet unclassified' stamp: 'rk 5/17/2013 20:54'!renderContentOn: html	html heading: 'Hello ', name, '!!'.	html anchor callback: [ self answer. ]; with: 'Change name'.! !!SayHello methodsFor: 'as yet unclassified' stamp: 'rk 5/17/2013 20:23'!to: aName	name _ aName.! !WAComponent subclass: #UserController	instanceVariableNames: 'net system cConference show cUsers cUserPanel'	classVariableNames: ''	poolDictionaries: ''	category: 'PNtalk-DP-xcaham02'!!UserController methodsFor: 'as yet unclassified' stamp: 'rk 5/7/2013 01:21'!addConf	| res conf |	conf _ nil.	conf _ system newConference.	res _ ( self call: (EditConference new entity: conf ) ).	res ifTrue: [			system addConference: conf.			Transcript show: 'Added new conference'	; cr.		]		ifFalse: [			Transcript show: 'Added conf cancelled.'; cr.			"system removeConf: conf."		].! !!UserController methodsFor: 'as yet unclassified' stamp: 'rk 5/18/2013 06:36'!children	^ {cConference. cUsers. cUserPanel}.! !!UserController methodsFor: 'as yet unclassified' stamp: 'rk 5/14/2013 02:22'!initializeWithSystem: aVar	self initialize.		system _ aVar.	show _ #conf.		cConference _ ConferenceList new.	cConference for: self system: system.		cUsers _ UserList new.	cUsers for: self system: system.	! !!UserController methodsFor: 'as yet unclassified' stamp: 'rk 5/18/2013 06:17'!initializeWithSystem: aVar net: uNet	self initialize.		system _ aVar.	net _ uNet.	show _ #conf.		cConference _ ConferenceList new.	cConference for: net system: system.		cUsers _ UserList new.	cUsers for: net system: system.		cUserPanel _ UserPanel new.	cUserPanel for: net.	! !!UserController methodsFor: 'as yet unclassified' stamp: 'rk 5/18/2013 11:10'!renderContentOn: html		self renderHeaderOn: html.	html heading: 'User controler'.		show = #conf		ifTrue: [			html render: cConference.		].	show = #users		ifTrue: [			html render: cUsers.		].! !!UserController methodsFor: 'as yet unclassified' stamp: 'rk 5/18/2013 11:25'!renderHeaderOn: html	html table: [		html tableRow: [			html tableData: [				html anchor callback: [ self answer: net ]; with: 'Logout'.			].			html tableData: [				html anchor callback: [ show _ #conf. ]; with: 'Conferences'.			].			html tableData: [				html anchor callback: [ show _ #users. ]; with: 'Users'.			].			html tableData: [				html render: cUserPanel.			].		].	].! !!UserController methodsFor: 'as yet unclassified' stamp: 'rk 5/5/2013 03:14'!with: uNet	net _ uNet.! !!UserController methodsFor: 'as yet unclassified' stamp: 'rk 5/14/2013 00:52'!with: uNet system: aSystem	net _ uNet.	system _ aSystem.	"cConference system: system."! !!UserController methodsFor: 'rendering'!style ^ 'table {
border: 1px solid black;
}'! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!UserController class	instanceVariableNames: ''!!UserController class methodsFor: 'as yet unclassified' stamp: 'rk 5/14/2013 01:25'!newIn: aSystem	^ self basicNew			initializeWithSystem: aSystem;			yourself.! !!UserController class methodsFor: 'as yet unclassified' stamp: 'rk 5/18/2013 04:42'!newIn: aSystem with: uNet	^ self basicNew			initializeWithSystem: aSystem net: uNet;			yourself.! !WAComponent subclass: #UserList	instanceVariableNames: 'system user'	classVariableNames: ''	poolDictionaries: ''	category: 'PNtalk-DP-xcaham02'!!UserList methodsFor: 'as yet unclassified' stamp: 'rk 5/14/2013 02:14'!addConf	| conf res |	conf _ nil.	conf _ system newConference.	res _ ( self call: (EditConference new entity: conf ) ).	res ifTrue: [			system addConference: conf.			Transcript show: 'Added new conference'	; cr.		]		ifFalse: [			Transcript show: 'Added conf cancelled.'; cr.			"system removeConf: conf."		].! !!UserList methodsFor: 'as yet unclassified' stamp: 'rk 5/14/2013 02:21'!addUser	| entity res |	entity _ nil.	entity _ system newUser.	res _ ( self call: (EditMember new entity: entity ) ).	res ifTrue: [			system addUser: entity.		]		ifFalse: [			"system removeConf: conf."		].! !!UserList methodsFor: 'as yet unclassified' stamp: 'rk 5/14/2013 02:14'!for: aUser system: aVar	user _ aUser.	system _ aVar.! !!UserList methodsFor: 'as yet unclassified' stamp: 'rk 5/14/2013 02:20'!renderContentOn: html	| items res name |	html heading: 'Users' level: 2.	html anchor callback: [		Transcript show: 'add Conf'; cr.		self addUser.	]; with: 'Add'.		items _ system asPort users: (PNVariable name: #c).	items isTrue		ifTrue: [			html table: [				html tableRow: [						html tableHeading: 'Name'.						html tableHeading colSpan: 2; with: 'Actions'.					].			(items collectVariable: #c) do:				[:entity |					res _ entity asPort name: (PNVariable name: #var).					name _ res variable: #var.															html tableRow: [						html tableData: [							html anchor callback: [								self call: (DetailConference new entity: entity ).							]; with: name.						].            				html tableData: [							html anchor callback: [								self call: (EditMember new entity: entity ).							]; with: 'Edit'.						].						html tableData: [							html anchor callback: [								(self confirm: 'Are you sure that you want to remove this user?')        								ifTrue: [ system removeUser: entity ].							]; with: 'Delete'.						].					].				].			].		].! !!UserList methodsFor: 'as yet unclassified' stamp: 'rk 5/14/2013 02:14'!system: aVar	system _ aVar.! !WAComponent subclass: #UserPanel	instanceVariableNames: 'name role'	classVariableNames: ''	poolDictionaries: ''	category: 'PNtalk-DP-xcaham02'!!UserPanel methodsFor: 'as yet unclassified' stamp: 'rk 5/18/2013 06:38'!for: aNet	| member |	member _ (aNet asPort member: (PNVariable name: #m) ) variable: #m.	name _ (member asPort name: (PNVariable name: #name) ) variable: #name.	role _ (member asPort role: (PNVariable name: #role) ) variable: #role. ! !!UserPanel methodsFor: 'as yet unclassified' stamp: 'rk 5/18/2013 06:21'!renderContentOn: html	html text: 'User info'.	html text: name.	html text: role.! !WAComponent subclass: #WAConferenceSystemDP	instanceVariableNames: 'name role failMessage uNet'	classVariableNames: 'system'	poolDictionaries: ''	category: 'PNtalk-DP-xcaham02'!!WAConferenceSystemDP methodsFor: 'as yet unclassified' stamp: 'rk 5/18/2013 06:15'!anonymousAccess			uNet _ system verify: #anonym.						Transcript show: 'Anonymous access'; cr.			^ self logout: (self call: ( UserController newIn: system with: uNet) ).! !!WAConferenceSystemDP methodsFor: 'as yet unclassified' stamp: 'rk 5/4/2013 16:38'!canBeRoot	^ true.! !!WAConferenceSystemDP methodsFor: 'as yet unclassified' stamp: 'rk 5/11/2013 15:29'!initialize	| regCls |	super initialize.		system isNil ifTrue: [ 		regCls _ MyRepository objectWithPathName: '/PNtalk classes/ConferenceSystemDP/SystemNet'.		system _ regCls newIn: (PNtalkSimulation default world).		system initMe.	].! !!WAConferenceSystemDP methodsFor: 'as yet unclassified' stamp: 'rk 5/18/2013 05:30'!login	| port res us test |	port _ system asPort.	res _ port login: name user: (PNVariable name: #u).	res isTrue		ifTrue: [			us _ res variable: #u.			uNet _ system verify: us.			"res perform."			Transcript show: 'Login true'; cr.						test _ us asPort isAdmin.			test isTrue				ifTrue: [^ self logout: (self call: ( UserController newIn: system with: uNet) ).].						test _ us asPort isAuthor.			test isTrue				ifTrue: [^ self logout: (self call: (Author new with: uNet) ).].							test _ us asPort isReviewer.			test isTrue				ifTrue: [^ self logout: (self call: (Reviewer new with: uNet) ).].						failMessage _ 'Error: Unknown error in login. Probably in PNtalk model.'.			^ false.		]		ifFalse: [			Transcript show: 'Login false'; cr.			failMessage _ 'Login name unknown. Please register first.'.			^ false.		].! !!WAConferenceSystemDP methodsFor: 'as yet unclassified' stamp: 'rk 5/16/2013 06:46'!logout: net	| port res |	port _ system asPort.	res _ port logout: net.	res isTrue		ifTrue: [			res perform.			"system logout: net."			^ true.		].! !!WAConferenceSystemDP methodsFor: 'as yet unclassified' stamp: 'rk 5/4/2013 18:58'!name	^ name.! !!WAConferenceSystemDP methodsFor: 'as yet unclassified' stamp: 'rk 5/4/2013 20:34'!name: aName	name  _ aName.! !!WAConferenceSystemDP methodsFor: 'as yet unclassified' stamp: 'rk 5/7/2013 01:38'!register	| res |	res _ system newVerify: name as: role." res _ nil."	res = #nil		ifTrue: [			"the user name already exist"			failMessage _ 'This user name already exists. Please choose another one.'.			^ false.		]		ifFalse: [			"res is a user net"			"^ true."			^ self login.		]! !!WAConferenceSystemDP methodsFor: 'as yet unclassified' stamp: 'rk 5/18/2013 05:35'!renderContentOn: html	| userNet |		failMessage isEmptyOrNil 		ifFalse: [			html text: 'Error: '.			html text: failMessage; break; break.			failMessage _ nil.		].		html heading: 'Conference System'.	html heading: 'Login' level: 2.	html form: [		html table: [			html tableRow: [				html tableHeading: 'Name:' .            		html tableData: [					html textInput on: #name of: self .				].			].		].       	html submitButton callback: [ userNet _ self login]; with: 'Login'	]. 	html break; break.	html heading: 'or Register' level: 2.	html form: [		html table: [			html tableRow: [				html tableHeading: 'Name:' .            		html tableData: [					html textInput on: #name of: self .				].			].            	html tableRow: [				html tableHeading: 'Role:' .            		html tableData: [					html select						list: #(#author #reviewer #admin);						on: #role of: self .				].			].		].        	html submitButton callback: [userNet _ self register ]; with: 'Register'.	].	html heading: 'Anonymous access' level: 2.	html anchor callback: [ userNet _ self anonymousAccess. ]; with: 'Get in!!'.! !!WAConferenceSystemDP methodsFor: 'as yet unclassified' stamp: 'rk 5/4/2013 18:59'!role	^ role.! !!WAConferenceSystemDP methodsFor: 'as yet unclassified' stamp: 'rk 5/4/2013 19:00'!role: aRole	role _ aRole.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!WAConferenceSystemDP class	instanceVariableNames: ''!!WAConferenceSystemDP class methodsFor: 'as yet unclassified' stamp: 'rk 5/7/2013 09:41'!destroy	system := nil.! !WAComponent subclass: #WAHello	instanceVariableNames: 'name'	classVariableNames: ''	poolDictionaries: ''	category: 'PNtalk-DP-xcaham02'!!WAHello methodsFor: 'as yet unclassified' stamp: 'rk 5/17/2013 20:20'!canBeRoot	^ true.! !!WAHello methodsFor: 'as yet unclassified' stamp: 'rk 5/17/2013 20:22'!name	^ name.! !!WAHello methodsFor: 'as yet unclassified' stamp: 'rk 5/17/2013 20:22'!name: aName	name  _ aName.! !!WAHello methodsFor: 'as yet unclassified' stamp: 'rk 5/17/2013 20:30'!renderContentOn: html	html heading: 'SayHello app'.	html form: [		html text: 'Name'.		html textInput			on:#name of: self.		html submitButton			callback:[				self call: (SayHello new to: name).			]; with: 'Say hello'.	]! !!WAHello methodsFor: 'as yet unclassified' stamp: 'rk 5/17/2013 20:19'!to: aName	name _ aName.! !